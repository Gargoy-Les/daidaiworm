/*  StdMath.H  */

#define	FP_2_30		long
#define	FP_24_8		long
#define	FP_16_16	long

// -------------------------------------
//      SIN & COS table (FP_2_30)
// -------------------------------------

FP_2_30	SIN[256] =
{
	0x0,		0x192155F,	0x323ECBE,	0x4B54824,
	0x645E9AF,	0x7D59395,	0x9640837,	0xAF10A22,
	0xC7C5C1E,	0xE05C135,	0xF8CFCBD,	0x1111D262,
	0x1294062E,	0x14135C94,	0x158F9A75,	0x17088530,
	0x187DE2A6,	0x19EF7943,	0x1B5D1009,	0x1CC66E99,
	0x1E2B5D38,	0x1F8BA4DB,	0x20E70F32,	0x223D66A8,
	0x238E7673,	0x24DA0A99,	0x261FEFF9,	0x275FF452,
	0x2899E64A,	0x29CD9577,	0x2AFAD269,	0x2C216EAA,
	0x2D413CCC,	0x2E5A106F,	0x2F6BBE44,	0x30761C17,
	0x317900D6,	0x32744493,	0x3367C08F,	0x34534F40,
	0x3536CC52,	0x361214B0,	0x36E5068A,	0x37AF8158,
	0x387165E2,	0x392A9642,	0x39DAF5E8,	0x3A8269A2,
	0x3B20D79E,	0x3BB6276D,	0x3C424209,	0x3CC511D8,
	0x3D3E82AD,	0x3DAE81CE,	0x3E14FDF7,	0x3E71E758,
	0x3EC52F9F,	0x3F0EC9F4,	0x3F4EAAFE,	0x3F84C8E1,
	0x3FB11B47,	0x3FD39B5A,	0x3FEC43C6,	0x3FFB10C1,
	0x40000000,	0x3FFB10C1,	0x3FEC43C6,	0x3FD39B5A,
	0x3FB11B47,	0x3F84C8E1,	0x3F4EAAFE,	0x3F0EC9F4,
	0x3EC52F9F,	0x3E71E758,	0x3E14FDF7,	0x3DAE81CE,
	0x3D3E82AD,	0x3CC511D8,	0x3C424209,	0x3BB6276D,
	0x3B20D79E,	0x3A8269A2,	0x39DAF5E8,	0x392A9642,
	0x387165E3,	0x37AF8158,	0x36E5068A,	0x361214B0,
	0x3536CC52,	0x34534F40,	0x3367C08F,	0x32744493,
	0x317900D6,	0x30761C18,	0x2F6BBE44,	0x2E5A106F,
	0x2D413CCD,	0x2C216EAA,	0x2AFAD269,	0x29CD9577,
	0x2899E64A,	0x275FF452,	0x261FEFF9,	0x24DA0A99,
	0x238E7673,	0x223D66A8,	0x20E70F32,	0x1F8BA4DC,
	0x1E2B5D38,	0x1CC66E99,	0x1B5D1009,	0x19EF7943,
	0x187DE2A6,	0x17088531,	0x158F9A75,	0x14135C94,
	0x1294062E,	0x1111D262,	0xF8CFCBD,	0xE05C135,
	0xC7C5C1E,	0xAF10A22,	0x9640837,	0x7D59395,
	0x645E9AF,	0x4B54824,	0x323ECBE,	0x192155F,
	0x0,		0xFE6DEAA1,	0xFCDC1342,	0xFB4AB7DC,
	0xF9BA1652,	0xF82A6C6B,	0xF69BF7C9,	0xF50EF5DE,
	0xF383A3E2,	0xF1FA3ECB,	0xF0730343,	0xEEEE2D9E,
	0xED6BF9D2,	0xEBECA36D,	0xEA70658B,	0xE8F77AD0,
	0xE7821D5A,	0xE61086BD,	0xE4A2EFF7,	0xE3399167,
	0xE1D4A2C9,	0xE0745B25,	0xDF18F0CE,	0xDDC29958,
	0xDC71898D,	0xDB25F567,	0xD9E01007,	0xD8A00BAE,
	0xD76619B7,	0xD6326A89,	0xD5052D97,	0xD3DE9156,
	0xD2BEC334,	0xD1A5EF91,	0xD09441BC,	0xCF89E3E9,
	0xCE86FF2A,	0xCD8BBB6D,	0xCC983F71,	0xCBACB0C0,
	0xCAC933AE,	0xC9EDEB50,	0xC91AF976,	0xC8507EA8,
	0xC78E9A1E,	0xC6D569BE,	0xC6250A18,	0xC57D965E,
	0xC4DF2862,	0xC449D893,	0xC3BDBDF7,	0xC33AEE28,
	0xC2C17D53,	0xC2517E32,	0xC1EB0209,	0xC18E18A8,
	0xC13AD061,	0xC0F1360C,	0xC0B15502,	0xC07B371F,
	0xC04EE4B9,	0xC02C64A6,	0xC013BC3A,	0xC004EF3F,
	0xC0000000,	0xC004EF3F,	0xC013BC3A,	0xC02C64A6,
	0xC04EE4B9,	0xC07B371F,	0xC0B15502,	0xC0F1360C,
	0xC13AD061,	0xC18E18A8,	0xC1EB0209,	0xC2517E32,
	0xC2C17D53,	0xC33AEE28,	0xC3BDBDF7,	0xC449D893,
	0xC4DF2862,	0xC57D965E,	0xC6250A18,	0xC6D569BE,
	0xC78E9A1D,	0xC8507EA8,	0xC91AF976,	0xC9EDEB50,
	0xCAC933AE,	0xCBACB0C0,	0xCC983F70,	0xCD8BBB6D,
	0xCE86FF2A,	0xCF89E3E8,	0xD09441BC,	0xD1A5EF91,
	0xD2BEC333,	0xD3DE9156,	0xD5052D97,	0xD6326A89,
	0xD76619B6,	0xD8A00BAE,	0xD9E01007,	0xDB25F567,
	0xDC71898D,	0xDDC29958,	0xDF18F0CE,	0xE0745B24,
	0xE1D4A2C8,	0xE3399167,	0xE4A2EFF6,	0xE61086BD,
	0xE7821D5A,	0xE8F77ACF,	0xEA70658B,	0xEBECA36C,
	0xED6BF9D1,	0xEEEE2D9E,	0xF0730343,	0xF1FA3ECB,
	0xF383A3E2,	0xF50EF5DE,	0xF69BF7C9,	0xF82A6C6B,
	0xF9BA1651,	0xFB4AB7DC,	0xFCDC1342,	0xFE6DEAA1
};

FP_2_30	COS[256] =
{
	0x40000000,	0x3FFB10C1,	0x3FEC43C6,	0x3FD39B5A,
	0x3FB11B47,	0x3F84C8E1,	0x3F4EAAFE,	0x3F0EC9F4,
	0x3EC52F9F,	0x3E71E758,	0x3E14FDF7,	0x3DAE81CE,
	0x3D3E82AD,	0x3CC511D8,	0x3C424209,	0x3BB6276D,
	0x3B20D79E,	0x3A8269A2,	0x39DAF5E8,	0x392A9642,
	0x387165E3,	0x37AF8158,	0x36E5068A,	0x361214B0,
	0x3536CC52,	0x34534F40,	0x3367C08F,	0x32744493,
	0x317900D6,	0x30761C18,	0x2F6BBE44,	0x2E5A106F,
	0x2D413CCD,	0x2C216EAA,	0x2AFAD269,	0x29CD9577,
	0x2899E64A,	0x275FF452,	0x261FEFF9,	0x24DA0A99,
	0x238E7673,	0x223D66A8,	0x20E70F32,	0x1F8BA4DB,
	0x1E2B5D38,	0x1CC66E99,	0x1B5D1009,	0x19EF7943,
	0x187DE2A6,	0x17088531,	0x158F9A75,	0x14135C94,
	0x1294062E,	0x1111D262,	0xF8CFCBD,	0xE05C135,
	0xC7C5C1E,	0xAF10A22,	0x9640837,	0x7D59395,
	0x645E9AF,	0x4B54824,	0x323ECBE,	0x192155F,
	0x0,		0xFE6DEAA1,	0xFCDC1342,	0xFB4AB7DC,
	0xF9BA1652,	0xF82A6C6B,	0xF69BF7C9,	0xF50EF5DE,
	0xF383A3E2,	0xF1FA3ECB,	0xF0730343,	0xEEEE2D9E,
	0xED6BF9D2,	0xEBECA36C,	0xEA70658B,	0xE8F77AD0,
	0xE7821D5A,	0xE61086BD,	0xE4A2EFF7,	0xE3399167,
	0xE1D4A2C9,	0xE0745B25,	0xDF18F0CE,	0xDDC29958,
	0xDC71898D,	0xDB25F567,	0xD9E01007,	0xD8A00BAE,
	0xD76619B6,	0xD6326A89,	0xD5052D97,	0xD3DE9156,
	0xD2BEC334,	0xD1A5EF91,	0xD09441BC,	0xCF89E3E9,
	0xCE86FF2A,	0xCD8BBB6D,	0xCC983F71,	0xCBACB0C0,
	0xCAC933AE,	0xC9EDEB50,	0xC91AF976,	0xC8507EA8,
	0xC78E9A1E,	0xC6D569BE,	0xC6250A18,	0xC57D965E,
	0xC4DF2862,	0xC449D893,	0xC3BDBDF7,	0xC33AEE28,
	0xC2C17D53,	0xC2517E32,	0xC1EB0209,	0xC18E18A8,
	0xC13AD061,	0xC0F1360C,	0xC0B15502,	0xC07B371F,
	0xC04EE4B9,	0xC02C64A6,	0xC013BC3A,	0xC004EF3F,
	0xC0000000,	0xC004EF3F,	0xC013BC3A,	0xC02C64A6,
	0xC04EE4B9,	0xC07B371F,	0xC0B15502,	0xC0F1360C,
	0xC13AD061,	0xC18E18A8,	0xC1EB0209,	0xC2517E32,
	0xC2C17D53,	0xC33AEE28,	0xC3BDBDF7,	0xC449D893,
	0xC4DF2862,	0xC57D965E,	0xC6250A18,	0xC6D569BE,
	0xC78E9A1D,	0xC8507EA8,	0xC91AF976,	0xC9EDEB50,
	0xCAC933AE,	0xCBACB0C0,	0xCC983F71,	0xCD8BBB6D,
	0xCE86FF2A,	0xCF89E3E8,	0xD09441BC,	0xD1A5EF91,
	0xD2BEC333,	0xD3DE9156,	0xD5052D97,	0xD6326A89,
	0xD76619B6,	0xD8A00BAE,	0xD9E01007,	0xDB25F567,
	0xDC71898D,	0xDDC29958,	0xDF18F0CE,	0xE0745B24,
	0xE1D4A2C8,	0xE3399167,	0xE4A2EFF7,	0xE61086BD,
	0xE7821D5A,	0xE8F77ACF,	0xEA70658B,	0xEBECA36C,
	0xED6BF9D2,	0xEEEE2D9E,	0xF0730343,	0xF1FA3ECB,
	0xF383A3E2,	0xF50EF5DE,	0xF69BF7C9,	0xF82A6C6B,
	0xF9BA1651,	0xFB4AB7DC,	0xFCDC1342,	0xFE6DEAA1,
	0x0,		0x192155F,	0x323ECBD,	0x4B54824,
	0x645E9AE,	0x7D59395,	0x9640837,	0xAF10A22,
	0xC7C5C1E,	0xE05C135,	0xF8CFCBD,	0x1111D262,
	0x1294062E,	0x14135C93,	0x158F9A75,	0x17088530,
	0x187DE2A6,	0x19EF7943,	0x1B5D1009,	0x1CC66E99,
	0x1E2B5D37,	0x1F8BA4DB,	0x20E70F32,	0x223D66A8,
	0x238E7673,	0x24DA0A99,	0x261FEFF9,	0x275FF452,
	0x2899E649,	0x29CD9577,	0x2AFAD268,	0x2C216EAA,
	0x2D413CCC,	0x2E5A106F,	0x2F6BBE44,	0x30761C17,
	0x317900D6,	0x32744493,	0x3367C08F,	0x34534F40,
	0x3536CC52,	0x361214B0,	0x36E5068A,	0x37AF8158,
	0x387165E2,	0x392A9642,	0x39DAF5E8,	0x3A8269A2,
	0x3B20D79E,	0x3BB6276D,	0x3C424209,	0x3CC511D8,
	0x3D3E82AD,	0x3DAE81CE,	0x3E14FDF7,	0x3E71E758,
	0x3EC52F9F,	0x3F0EC9F4,	0x3F4EAAFE,	0x3F84C8E1,
	0x3FB11B47,	0x3FD39B59,	0x3FEC43C6,	0x3FFB10C1
};

// -------------------------------------
//    Rotate
// -------------------------------------

void RotatePoint(FP_24_8 *X, FP_24_8 *Y, BYTE Angle)
{
	FP_2_30		SinValue, CosValue;
	FP_24_8		Xt, Yt;

	SinValue = SIN [Angle];
	CosValue = COS [Angle];
	Xt = *X;
	Yt = *Y;

	_asm {
		MOV		EBX,SinValue
		MOV		ECX,CosValue

		MOV		EAX,Yt
		IMUL	EBX
		SAL		EDX,2
		MOV		ESI,EDX		// ESI=Yt x Sin()
		
		MOV		EAX,Xt
		IMUL	ECX
		SAL		EDX,2		// EDX=Xt x Cos()
		SUB		EDX,ESI		// EDX=Xt x Cos() - Yt x Sin()
		MOV		EDI,X
		MOV		[EDI],EDX	// *X=EDX

		MOV		EAX,Yt
		IMUL	ECX
		SAL		EDX,2
		MOV		ESI,EDX		// ESI=Yt x Cos()
		
		MOV		EAX,Xt
		IMUL	EBX
		SAL		EDX,2		// EDX=Xt x Sin()
		ADD		EDX,ESI		// EDX=Xt x Sin() + Yt x Cos()
		MOV		EDI,Y
		MOV		[EDI],EDX	// *Y=EDX
	}
}

// -------------------------------------

